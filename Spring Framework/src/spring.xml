<?xml version="1.0" encoding="UTF-8"?>


<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd"
    xmlns:context="http://www.springframework.org/schema/context"
    default-init-method="init" default-destroy-method="destroy">

	<bean id="triangle" class="pojo.Triangle" autowire="byType" scope="singleton">
		<property name="pointA" ref="pointA"/>
		<property name="pointB" ref="pointB"/>
		<property name="pointC" ref="pointC"/>
	</bean>
	
	<bean id="parenttrianglewithlist" class="pojo.TriangleWithList" autowire="byType" scope="prototype">
		<property name="points">
			<list>
				<ref bean="pointA"/>
			</list>
		</property>
	</bean>
	
	<bean id="parentsquare" class="pojo.Square" autowire="byType" scope="prototype">
		<property name="pointA" ref="pointA"/>
		<property name="pointB" ref="pointB"/>
		<property name="pointC" ref="pointC"/>
	</bean>
	
	<bean id="inheritedsquare" class="pojo.Square" autowire="byType" scope="prototype" parent="parentsquare">
		<property name="pointD" ref="pointD"/>
	</bean>
	
	<bean id="inheritedlisttriangle" class="pojo.TriangleWithList" autowire="byType" scope="prototype" parent="parenttrianglewithlist">
		<property name="points">
			<list merge="true">
				<ref bean="pointB"/>
				<ref bean="pointC"/>
			</list>
		</property>
	</bean>
	
	<bean id="square" class="pojo.Square" autowire="byType" scope="prototype">
		<property name="pointA" ref="pointA"/>
		<property name="pointB" ref="pointB"/>
		<property name="pointC" ref="pointC"/>
		<property name="pointD" ref="pointD"/>
	</bean>
	
	<bean id="circle" class="pojo.Circle" autowire="byType" scope="prototype"/>

	<bean id="pointA" class="pojo.Point">
		<qualifier value="center"/> <!--when there are multiple points in spring.xml, it qualifies the correct point to circle -->
		<property name="x" value="${pointA.pointX}" />
		<property name="y" value="${pointA.pointY}" />
	</bean>
	<bean id="pointB" class="pojo.Point">
		<property name="x" value="-20" />
		<property name="y" value="0" />
	</bean>
	<bean id="pointC" class="pojo.Point">
		<property name="x" value="20" />
		<property name="y" value="0" />
	</bean>
	<bean id="pointD" class="pojo.Point">
		<property name="x" value="20" />
		<property name="y" value="20" />
	</bean>
	
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" >
		<property name="locations" value="pointsconfig.properties"/>
	</bean>
	
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>mymessages</value>
			</list>
		</property>
	</bean>
	
	<!--bean class="springimpl.DisplayNameBeanPostProcessor"/--><!--hook for before and after initializing beans-->
	<!--bean class="springimpl.DisplayCommentBeanFactoryPostProcessor"/--><!--hook for after bean factory is called-->
	
	<context:annotation-config/><!--brings all of the bean post processors -->
	<context:component-scan base-package="springimpl"/><!--scans all of the components under that package and make them beans -->

</beans>